{"version":3,"sources":["pages/common/AppScroll/AppScroll.js","util/countTime.js","pages/message/children/showMessage/ShowMessage.js","pages/message/message/Message.js"],"names":["AppScroll","className","ref","this","props","children","scroll","BScroll","refs","tap","click","on","refresh","Component","countTime","date","d","Date","M","getMinutes","getHours","getMonth","getDate","showList","selectId","list","showMessage","filter","item","status","filterList","map","to","pathname","id","key","proSimpName","message","navs","title","Message","state","location","messageList","onClick","btnActin","bind","style","backgroundColor","color","ShowMessage","proList","flag","setState","length","getProList","changeHasbackAction","changeTitle","fetchList","connect","hasBack","header","pro","home","dispatch","action","requestProList","type"],"mappings":"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","file":"static/js/6.d3acf2bd.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport BScroll from 'better-scroll'\r\nimport './style.scss'\r\n\r\nexport default class AppScroll extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"appscroll\" ref=\"scroll\">\r\n        <div className=\"scollmain\">\r\n          {\r\n            this.props.children\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  componentDidMount(){\r\n   let scroll = new BScroll(this.refs.scroll, {\r\n      tap: true,\r\n      click: true\r\n    });\r\n    // 如果需要滚动，先刷新滚动视图，就可以在可滚动范围内滚动\r\n    scroll.on('beforeScrollStart', ()=>{\r\n      scroll.refresh();\r\n    });\r\n  }\r\n}\r\n","const countTime = (date)=>{\r\n  let d = new Date();\r\n  let OneDay = 24*60*60*1000\r\n  let TwoDay = 24*60*60*1000*2\r\n  let M = (new Date(date).getMinutes()<10 ? '0'+new Date(date).getMinutes() :new Date(date).getMinutes())\r\n  if((d-date)<OneDay){\r\n    return '今天' + new Date(date).getHours()+':'+M\r\n  }\r\n  if((d-date)>OneDay && (d-date)<TwoDay){\r\n    return '昨天' + new Date(date).getHours()+':'+M\r\n  }\r\n  if((d-date)>TwoDay){\r\n    return (new Date(date).getMonth()+1) +'月'+new Date(date).getDate()+'日'\r\n  }\r\n}\r\n\r\nexport default countTime","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport './style.scss'\r\nimport countTime from '../../../../util/countTime';\r\n\r\nconst filterList = (showMessage,showList,selectId)=>{\r\n  if(selectId === 1){\r\n    return showList.filter(item=>(item.status === 'todo'))\r\n  }\r\n  if(selectId === 2){\r\n    return showList.filter(item=>(item.status === 'finished'))\r\n  }\r\n  if(selectId === 3){\r\n    return showMessage\r\n    \r\n  }\r\n}\r\n// const countTime = (date)=>{\r\n//   let d = new Date();\r\n//   let OneDay = 24*60*60*1000\r\n//   let TwoDay = 24*60*60*1000*2\r\n//   if((d-date)<OneDay){\r\n//     return '今天' + new Date(date).getHours()+':'+new Date(date).getMinutes()\r\n//   }\r\n//   if((d-date)>OneDay && (d-date)<TwoDay){\r\n//     return '昨天' + new Date(date).getHours()+':'+new Date(date).getMinutes()\r\n//   }\r\n//   if((d-date)>TwoDay){\r\n//     return '今天' + (new Date(date).getMonth()+1) +':'+new Date(date).getDate()\r\n//   }\r\n// }\r\n\r\n\r\nexport default (props)=> {\r\n  let {showList,selectId,showMessage} = props\r\n  let list = filterList(showMessage,showList,selectId)\r\n  \r\n  // console.log(list)\r\n    return (\r\n        <>\r\n          { selectId !== 3 ?\r\n            list.map(item=>(\r\n              <Link className=\"s_link\" to={{pathname:`/message/DealPro/${item.id}`}} key={item.id}>\r\n                <p className=\"s_time\">{item.proSimpName} <span>{countTime(item.date)}</span></p>\r\n                <p className=\"s_main\">{item.proSimpName}{item.status === 'todo' ?'已创建，请前往处理' : '已完成' }</p>\r\n              </Link>\r\n            ))\r\n            :\r\n            list.map(item=>(\r\n              <li className=\"h_newMess\" key={item.id}>\r\n              <span className={item.status === 'todo'? 'h_red' : 'h_org'}>{item.status === 'todo' ? '待办' : '通知'}</span>\r\n              <p>{item.message} {item.message} {item.message}</p>\r\n              <span className=\"h_time\">{item.date}</span>\r\n            </li>\r\n            ))\r\n          }\r\n        </>\r\n    )\r\n\r\n    // \"id\":2,\r\n    //   \"message\":\"清远项目,xxx文件已发布\",\r\n    //   \"date\":\"13:21\",\r\n    //   \"status\":\"pending\"\r\n\r\n}\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport './style.scss'\r\nimport {connect} from 'react-redux'\r\nimport {requestProList} from '../../../store/reducers/pro' \r\nimport ShowMessage from '../children/showMessage/ShowMessage'\r\nimport AppScroll from '../../common/AppScroll/AppScroll'\r\n\r\nconst navs=[\r\n  {id:1,title:'待办事项'},\r\n  {id:2,title:'已办事项'},\r\n  {id:3,title:'通知'},\r\n]\r\n\r\nclass Message extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    // console.log(props)\r\n    this.state={\r\n      selectId:props.location.state || 1,\r\n      showMessage:props.messageList\r\n    }\r\n\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"page\">\r\n      <div className=\"x_top\">\r\n        <nav className=\"x_tabs\">\r\n          {\r\n            navs.map(item=>(\r\n              <span key={item.id} onClick={this.btnActin.bind(this,item.id)} style={{backgroundColor: this.state.selectId === item.id ? 'blue' : '',color: this.state.selectId === item.id ? '#fff' : '' }}>{item.title}</span>\r\n            ))\r\n          }\r\n        </nav>\r\n      </div>\r\n\r\n\r\n      <div className=\"x_showList\">\r\n      <AppScroll>\r\n        <ShowMessage showMessage={this.state.showMessage} showList={this.props.proList} selectId={this.state.selectId}/>\r\n      </AppScroll>\r\n      </div>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n  btnActin(flag){\r\n    this.setState(()=>({\r\n      selectId:flag\r\n    }))\r\n  }\r\n\r\n  fetchList(){\r\n    if(this.props.proList.length > 0){\r\n      return\r\n    }else{\r\n      this.props.getProList();\r\n    }\r\n  }\r\n  componentDidMount(){\r\n    this.props.changeHasbackAction();\r\n    this.props.changeTitle();\r\n    this.fetchList()\r\n  }\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = (state)=>{\r\n  return {\r\n    hasBack:state.header.hasBack,\r\n    title:state.header.title,\r\n    proList:state.pro.proList,\r\n    messageList:state.home.messageList\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch)=>{\r\n  return {\r\n    getProList(){\r\n      let action = requestProList();\r\n      dispatch(action);\r\n    },\r\n    changeHasbackAction(){\r\n      dispatch({\r\n        type:'changeHasBack',\r\n        hasBack:false,\r\n      })\r\n    },\r\n    changeTitle(){\r\n      dispatch({\r\n        type:'changeTitle',\r\n        title:'消息'\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Message)\r\n"],"sourceRoot":""}