{"version":3,"sources":["pages/common/AppScroll/AppScroll.js","pages/pro/children/showPro/ShowPro.js"],"names":["AppScroll","className","ref","this","props","children","scroll","BScroll","refs","tap","click","on","refresh","Component","ShowPro","state","pending","new","finished","close","to","changeHasbackAction","changeTitle","proList","filter","item","status","length","connect","hasBack","header","title","pro","dispatch","type"],"mappings":"4MAIqBA,G,wLAEjB,OACE,yBAAKC,UAAU,YAAYC,IAAI,UAC7B,yBAAKD,UAAU,aAEXE,KAAKC,MAAMC,a,0CAOpB,IAAIC,EAAS,IAAIC,IAAQJ,KAAKK,KAAKF,OAAQ,CACxCG,KAAK,EACLC,OAAO,IAGTJ,EAAOK,GAAG,qBAAqB,WAC7BL,EAAOM,iB,GAnB0BC,e,kLCEjCC,E,YACJ,aAAc,IAAD,8BACX,+CACKC,MAAM,CACTC,QAAU,KACVC,IAAM,KACNC,SAAW,KACXC,MAAO,MANE,E,sEAUX,OACE,yBAAKlB,UAAU,gBACb,kBAAC,IAAD,KACE,yBAAKA,UAAU,QACb,yBAAKA,UAAU,WACb,kBAAC,IAAD,CAAMmB,GAAG,wBAAuB,8BAAOjB,KAAKY,MAAMC,SAAe,uEACjE,kBAAC,IAAD,CAAMI,GAAG,YAAW,8BAAOjB,KAAKY,MAAME,KAAW,qDACjD,kBAAC,IAAD,CAAMG,GAAG,sBAAqB,8BAAOjB,KAAKY,MAAMG,UAAgB,2DAChE,kBAAC,IAAD,CAAME,GAAG,sBAAqB,8BAAOjB,KAAKY,MAAMI,OAAa,6DAGjE,yBAAKlB,UAAU,cACb,qI,0CAiBRE,KAAKC,MAAMiB,sBACXlB,KAAKC,MAAMkB,iB,gDAVmBlB,EAAMW,GACpC,MAAM,CACJC,QAAUZ,EAAMmB,QAAQC,QAAO,SAAAC,GAAI,MAAmB,YAAhBA,EAAKC,UAAuBC,OAClEV,IAAMb,EAAMmB,QAAQC,QAAO,SAAAC,GAAI,MAAmB,SAAhBA,EAAKC,UAAoBC,OAC3DT,SAAWd,EAAMmB,QAAQC,QAAO,SAAAC,GAAI,MAAmB,aAAhBA,EAAKC,UAAwBC,OACpER,MAAQf,EAAMmB,QAAQC,QAAO,SAAAC,GAAI,MAAmB,UAAhBA,EAAKC,UAAqBC,Y,GApC9Cd,aAmEPe,uBArBS,SAACb,GAAD,MAAU,CAChCc,QAAQd,EAAMe,OAAOD,QACrBE,MAAMhB,EAAMe,OAAOC,MACnBR,QAAQR,EAAMiB,IAAIT,YAGO,SAACU,GAAD,MAAa,CACtCZ,oBADsC,WAEpCY,EAAS,CACPC,KAAK,gBACLL,SAAQ,KAGZP,YAPsC,WAQpCW,EAAS,CACPC,KAAK,cACLH,MAAM,iCAKGH,CAA4Cd","file":"static/js/12.3e482453.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport BScroll from 'better-scroll'\r\nimport './style.scss'\r\n\r\nexport default class AppScroll extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"appscroll\" ref=\"scroll\">\r\n        <div className=\"scollmain\">\r\n          {\r\n            this.props.children\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  componentDidMount(){\r\n   let scroll = new BScroll(this.refs.scroll, {\r\n      tap: true,\r\n      click: true\r\n    });\r\n    // 如果需要滚动，先刷新滚动视图，就可以在可滚动范围内滚动\r\n    scroll.on('beforeScrollStart', ()=>{\r\n      scroll.refresh();\r\n    });\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport './style.scss'\r\nimport {connect} from 'react-redux'\r\nimport AppScroll from '../../../common/AppScroll/AppScroll'\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass ShowPro extends Component {\r\n  constructor(){\r\n    super();\r\n    this.state={\r\n      pending : null,\r\n      new : null,\r\n      finished : null,\r\n      close :null\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"page subpage\">\r\n        <AppScroll>\r\n          <div className=\"ss_t\">\r\n            <div className=\"ss_main\">\r\n              <Link to=\"/pro/project/pending\"><span>{this.state.pending}</span><span>进行中的项目</span></Link>\r\n              <Link to=\"/message\"><span>{this.state.new}</span><span>新项目</span></Link>\r\n              <Link to=\"/pro/project/close\"><span>{this.state.finished}</span><span>项目完成</span></Link>\r\n              <Link to=\"/pro/project/close\"><span>{this.state.close}</span><span>项目关闭</span></Link>\r\n            </div>\r\n          </div>\r\n          <div className=\"ss_content\">\r\n            <h1>以下空白本是想做数据可视化的,但.....</h1>\r\n          </div>\r\n\r\n\r\n        </AppScroll>\r\n      </div>\r\n    )\r\n  }\r\n  static getDerivedStateFromProps(props,state){\r\n    return{\r\n      pending : props.proList.filter(item=>(item.status === 'pending')).length,\r\n      new : props.proList.filter(item=>(item.status === 'todo')).length,\r\n      finished : props.proList.filter(item=>(item.status === 'finished')).length,\r\n      close : props.proList.filter(item=>(item.status === 'close')).length\r\n    }\r\n  }\r\n  componentDidMount(){\r\n    this.props.changeHasbackAction();\r\n    this.props.changeTitle();\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state)=>({\r\n  hasBack:state.header.hasBack,\r\n  title:state.header.title,\r\n  proList:state.pro.proList\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch)=>({\r\n  changeHasbackAction(){\r\n    dispatch({\r\n      type:'changeHasBack',\r\n      hasBack:true,\r\n    })\r\n  },\r\n  changeTitle(){\r\n    dispatch({\r\n      type:'changeTitle',\r\n      title:'项目统计'\r\n    })\r\n  }\r\n})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ShowPro)\r\n"],"sourceRoot":""}