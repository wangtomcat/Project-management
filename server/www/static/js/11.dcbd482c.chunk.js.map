{"version":3,"sources":["pages/common/AppScroll/AppScroll.js","pages/pro/children/project/Project.js"],"names":["AppScroll","className","ref","this","props","children","scroll","BScroll","refs","tap","click","on","refresh","Component","PendPro","flag","match","params","proList","filterList","map","item","to","pathname","id","key","src","proImg","alt","proSimpName","Date","date","getFullYear","getMonth","filter","status","changeHasbackAction","changeTitle","connect","state","hasBack","header","title","pro","dispatch","type","val"],"mappings":"4MAIqBA,G,wLAEjB,OACE,yBAAKC,UAAU,YAAYC,IAAI,UAC7B,yBAAKD,UAAU,aAEXE,KAAKC,MAAMC,a,0CAOpB,IAAIC,EAAS,IAAIC,IAAQJ,KAAKK,KAAKF,OAAQ,CACxCG,KAAK,EACLC,OAAO,IAGTJ,EAAOK,GAAG,qBAAqB,WAC7BL,EAAOM,iB,GAnB0BC,e,kLCEjCC,E,iLACK,IAEAC,EAAQZ,KAAKC,MAAMY,MAAMC,OAAzBF,KAEHG,EAAUf,KAAKgB,WAAWJ,GAC9B,OACE,yBAAKd,UAAU,gBACb,kBAAC,IAAD,KAEIiB,EAAQE,KAAI,SAAAC,GAAI,OACd,kBAAC,IAAD,CAAMpB,UAAU,UAAUqB,GAAI,CAACC,SAAS,0BAAD,OAA2BF,EAAKG,KAAOC,IAAKJ,EAAKG,IACxF,yBAAKE,IAAKL,EAAKM,OAAQC,IAAI,KAC3B,0BAAM3B,UAAU,UAAUoB,EAAKG,GAA/B,IAAoCH,EAAKQ,aACzC,0BAAM5B,UAAU,UAAW,IAAI6B,KAAKT,EAAKU,MAAMC,cAAe,UAAK,IAAIF,KAAKT,EAAKU,MAAME,WAAW,GAAG,kB,iCAUtGlB,GACT,MAAY,YAATA,EACMZ,KAAKC,MAAMc,QAAQgB,QAAO,SAAAb,GAAI,OAAGA,EAAKc,SAAWpB,KAEjDZ,KAAKC,MAAMc,QAAQgB,QAAO,SAAAb,GAAI,MAAmB,aAAhBA,EAAKc,QAAyC,UAAhBd,EAAKc,Y,0CAK7EhC,KAAKC,MAAMgC,sBACyB,YAAjCjC,KAAKC,MAAMY,MAAMC,OAAOF,KACvBZ,KAAKC,MAAMiC,YAAY,wCAEzBlC,KAAKC,MAAMiC,YAAY,6C,GArCPxB,aAiEPyB,uBArBS,SAACC,GAAD,MAAU,CAChCC,QAAQD,EAAME,OAAOD,QACrBE,MAAMH,EAAME,OAAOC,MACnBxB,QAAQqB,EAAMI,IAAIzB,YAGO,SAAC0B,GAAD,MAAa,CACtCR,oBADsC,WAEpCQ,EAAS,CACPC,KAAK,gBACLL,SAAQ,KAGZH,YAPsC,SAO1BS,GACVF,EAAS,CACPC,KAAK,cACLH,MAAMI,QAKGR,CAA4CxB","file":"static/js/11.dcbd482c.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport BScroll from 'better-scroll'\r\nimport './style.scss'\r\n\r\nexport default class AppScroll extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"appscroll\" ref=\"scroll\">\r\n        <div className=\"scollmain\">\r\n          {\r\n            this.props.children\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  componentDidMount(){\r\n   let scroll = new BScroll(this.refs.scroll, {\r\n      tap: true,\r\n      click: true\r\n    });\r\n    // 如果需要滚动，先刷新滚动视图，就可以在可滚动范围内滚动\r\n    scroll.on('beforeScrollStart', ()=>{\r\n      scroll.refresh();\r\n    });\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport './style.scss'\r\nimport AppScroll from '../../../common/AppScroll/AppScroll'\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass PendPro extends Component {\r\n  render() {\r\n    // console.log(this.props.match.params.flag)\r\n    const {flag} = this.props.match.params\r\n    // console.log(this.props.proList)\r\n    let proList = this.filterList(flag)\r\n    return (\r\n      <div className=\"page subpage\">\r\n        <AppScroll>\r\n          {\r\n            proList.map(item=>(\r\n              <Link className=\"penList\" to={{pathname:`/pro/project/prodetail/${item.id}`}} key={item.id}>\r\n              <img src={item.proImg} alt=\"\"/>\r\n              <span className=\"p_task\">{item.id} {item.proSimpName}</span>\r\n              <span className=\"p_time\">{(new Date(item.date).getFullYear())+'年'+(new Date(item.date).getMonth()+1)+'月'}</span>\r\n              </Link>\r\n            ))\r\n          }\r\n\r\n        </AppScroll>  \r\n      </div>\r\n    )\r\n  }\r\n\r\n  filterList(flag){\r\n    if(flag === 'pending'){\r\n      return this.props.proList.filter(item=>(item.status === flag))\r\n    }else{\r\n      return this.props.proList.filter(item=>(item.status === 'finished' || item.status === 'close'))\r\n    }\r\n  }\r\n \r\n  componentDidMount(){\r\n    this.props.changeHasbackAction();\r\n    if(this.props.match.params.flag === 'pending'){ \r\n        this.props.changeTitle('进行中的项目');\r\n    }else{\r\n      this.props.changeTitle('完成/关闭项目');\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state)=>({\r\n  hasBack:state.header.hasBack,\r\n  title:state.header.title,\r\n  proList:state.pro.proList\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch)=>({\r\n  changeHasbackAction(){\r\n    dispatch({\r\n      type:'changeHasBack',\r\n      hasBack:true,\r\n    })\r\n  },\r\n  changeTitle(val){\r\n    dispatch({\r\n      type:'changeTitle',\r\n      title:val\r\n    })\r\n  }\r\n})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(PendPro)\r\n\r\n"],"sourceRoot":""}